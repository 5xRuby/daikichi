#!/usr/bin/env ruby
# frozen_string_literal: true

require 'timeout'
require 'bundler/setup'
require 'pg'

def ensure_connection
  puts 'Check database connection...'
  Timeout.timeout(30) do
    PG.connect(ENV['DATABASE_URL'])
    sleep 1
  end
rescue Timeout::Error
  puts 'Unable connect database'
  exit 1
end

def run_migrate
  system('bundle exec rake db:migrate')
end

def run_seed
  system('bundle exec rake db:seed')
end

def run_server
  run_migrate unless ENV['AUTO_MIGRATION'].nil?
  exec("bundle exec rails server #{ARGV.join(' ')}")
end

def run_console
  exec("bundle exec rails console #{ARGV.join(' ')}")
end

def run_cron
  exec("crond -f #{ARGV.join(' ')}")
end

command = ARGV.shift

case command
when 'server', 'seed', 'console', 'sidekiq', 'migrate', 'rake', 'rails', 'cron'
  # ensure_connection
  return send("run_#{command}") if respond_to?("run_#{command}", true)

  exec("bundle exec #{command} #{ARGV.join(' ')}")
else
  exec("#{command} #{ARGV.join(' ')}")
end
