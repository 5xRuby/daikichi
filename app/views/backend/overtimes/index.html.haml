%h2= t("captions.backend/overtimes.index")

.panel.panel-default
  .panel-heading= t('panel_header.filter_conditions')
  .panel-body
    = simple_form_for @q, url: url_for(action: :index), method: :get do |f|
      = f.input :compensatory_type_eq, collection: Overtime.enum_attributes_for_select(:compensatory_types).map.with_index { |e, i| [e.first, i]},
        include_blank: t('.plz_select_compensatory_type'), required: false, wrapper_html: { class: 'col-xs-12' }
      = f.input :status_eq, collection: Overtime.enum_attributes_for_select(:statuses),
        include_blank: t('.plz_select_status'), required: false, wrapper_html: { class: 'col-md-6' }
      = f.input :user_id_eq, collection: @users, required: false,
        include_blank: t('.plz_select_user'), label_method: :name, value_method: :id,
        wrapper_html: { class: 'col-md-6' }
      = f.input :start_time_gteq, wrapper_html: { class: 'date-input col-md-6' },
        input_html: { data: { input: 'datepicker', format: 'Y/m/d' } }, required: false
      = f.input :end_time_lteq, wrapper_html: { class: 'date-input col-md-6' },
        input_html: { data: { input: 'datepicker', format: 'Y/m/d' } }, required: false
      
      .text-right
        = f.button :submit, class: 'btn-warning'

- if current_collection.any?
  %table.table.table-striped.table-bordered.table-hover
    %thead
      %tr.info
        %th.text-right
          = sort_link(@q, :id, '#')
        %th.text-center
          = sort_link(@q, :compensatory_type)
        %th.text-center= t_attribute :user, Overtime
        %th.text-right
          = sort_link(@q, :start_time)
        %th.text-right
          = sort_link(@q, :end_time)
        %th.text-right
          = sort_link(@q, :hours)
        %th.text-center= t_attribute :status, Overtime
        %th.text-center= t("captions.tools")
    %tbody
      - current_collection.each do |ot|
        %tr
          %td.text-right= ot.id
          %td.text-center= Overtime.human_enum_value(:compensatory_type, ot.compensatory_type)
          %td.text-center= ot.user.name
          %td.text-right= l ot.start_time, format: :long
          %td.text-right= l ot.end_time, format: :long
          %td.text-right= ot.hours
          %td.text-center
            - colored_state_label(ot.status)
          %td.text-center
            - if ot.pending?
              = link_to t("title.backend/overtimes.verify"),
                verify_backend_overtime_path(ot),
                class: "btn btn-warning"
            - else
              = link_to t("title.backend/overtimes.show"),
                verify_backend_overtime_path(ot),
                class: "btn btn-primary"
- else
  = no_data_alert

.paginate
  = paginate current_collection